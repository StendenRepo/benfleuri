### This file was generated by Nexus Schema
### Do not make changes to this file directly


enum CardType {
  BASIC_CARD
  NONE
  RIBBON
  SPECIAL_CARD
}

type Customer {
  city: String
  email: String
  firstName: String
  houseNumber: String
  id: Int
  lastName: String
  phone_number: String
  postcal_code: String
  streetName: String
}

type Employee {
  id: Int
  isAdmin: Boolean
  name: String
  password: String
}

type Mutation {
  createCustomer(city: String, email: String, firstName: String!, houseNumber: String, lastName: String!, phone_number: String!, postal_code: String, streetName: String): Customer
  createEmployee(isAdmin: Boolean = false, name: String!, password: String!): Employee
  deleteCustomer(id: Int!): Customer
  deleteEmployee(id: Int!): Employee
  updateCustomer(city: String, email: String, firstName: String!, houseNumber: String, id: Int!, lastName: String!, phone_number: String!, postal_code: String, streetName: String): Customer
  updateEmployee(id: Int!, isAdmin: Boolean, name: String, password: String): Employee
}

type Order {
  cardType: CardType
  customerId: Int
  dateOfDelivery: String
  employeeId: Int
  extraInfo: String
  id: Int
  includeDelivery: Boolean
  message: String
  orderDate: Boolean
  orderState: OrderState
  paymentMethod: PaymentMethod
  price: Int
  productInfo: String
  recieverId: Int
}

enum OrderState {
  CLOSED
  DELIVERED
  IN_PROGRESS
  OPEN
}

enum PaymentMethod {
  BY_INVOICE
  CASH
  PIN
}

type Query {
  findAllCustomers: [Customer]
  findAllEmployees: [Employee]
  findCustomerById(id: Int!): Customer
  findEmployeeById(id: Int!): Employee
}